{
	// Place your Brainget workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"React Funcional Component": {
		"scope": "javascript,typescript",
		"prefix": "ReactFun",
		"body": [
			"import React from 'react';\n",
			"import { StyleSheet } from 'react-native';\n",
			"const $TM_FILENAME_BASE = props => {",
			"\t$0",
			"}\n",
			"const styles = StyleSheet.create({});\n",
			"export default $TM_FILENAME_BASE;"
		]
	},

	"React Class Based Component": {
		"scope": "javascript,typescript",
		"prefix": "ReactClass",
		"body": [
			"import React, { Component } from 'react';\n",
			"import { StyleSheet } from 'react-native';\n",
			"class $TM_FILENAME_BASE extends Component {",
			"\tconsturctor(props){",
			"\t\tsuper(props);",
			"\t}\n",
			"\trender(){",
			"\t\t$0",
			"\t}",
			"}\n",
			"const styles = StyleSheet.create({});\n",
			"export default $TM_FILENAME_BASE;"
		]
	}
}